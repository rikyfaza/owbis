<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');class Hirarki extends CI_Model{	/*	*	Contructor	*/	public function __construct()    {        parent::__construct();    }		public function getHirarkiKPI2($parent, $idview, $idperiodname, $yearname)	{		$datarec = array();				//$Q = mysql_query('SELECT * FROM tblhirarkikpi WHERE parent = "'.$parent.'"');		$Q = mysql_query('SELECT tblhirarkikpi.`idmeasure`, tblhirarkikpi.`parent`, tblmeasure.`name` FROM tblmeasure INNER JOIN tblhirarkikpi ON tblmeasure.`idmeasure` = tblhirarkikpi.`idmeasure` WHERE tblhirarkikpi.parent = "'.$parent.'" AND idview = "'.$idview.'" ORDER BY tblmeasure.`name`');				while($line=mysql_fetch_assoc($Q))		{			$Q1 = mysql_query('SELECT COUNT(idmeasure) as NUMX FROM tblhirarkikpi WHERE parent = "'.$line['idmeasure'].'"');			$row1 = mysql_fetch_assoc($Q1);			if($row1['NUMX'] > 0)			{				$data = array(					'id'=>$line['idmeasure'],					'name'=>$line['name'],					'parent'=>$line['parent'],					'data'=>$this->getdetailhirarki($line['idmeasure'], $idview, $idperiodname, $yearname),					'children'=>$this->getHirarkiKPI2($line['idmeasure'], $idview, $idperiodname, $yearname)				);			}			else if($row1['NUMX'] < 1)			{				$data = array(					'id'=>$line['idmeasure'],					'name'=>$line['name'],					'parent'=>$line['parent'],					'data'=>$this->getdetailhirarki($line['idmeasure'], $idview, $idperiodname, $yearname)				);			}			$datarec[] = $data;		}        return $datarec;	}		public function getdetailhirarki($idmeasure, $idview, $idperiodname, $yearname)	{		/*			dicari dulu tipe measurenya 			dicari tipe viewnya			jika tipe view month maka jika mendapat measure quarter harus dikondisikan jika month antara jan feb mar maka ambil quarter 1 dan seterusnya			jika tipe view month maka jika mendapat measure week maka harus dikondisikan jika month antara jan feb mar maka ambil week w01-w12 dst						bagaimana dengan consolidation function sum, avg ,last value			bukankah udah dihitung ketika entry data actual target			maka sudah tinggal ambil aja dari data yang dimaksud			apa sudah valid ya jika seperti itu, sudah kayanya						variable idperiodname baru akan digunakan setelah diketahui tipe viewnya			jadi idperiodname hanya digunakan untuk detail measure yang sesuai dengan tipe viewnya			jika tipe view month dan tipe measure month maka gunakan variable idperiodname						jika tidak sama maka gunakan variable baru yang sesuai aturan diatas		*/		$QtipeMeasure = $this->db->query('SELECT storageperiod FROM tblmeasure WHERE idmeasure = "'.$idmeasure.'" ');		if($QtipeMeasure->num_rows() > 0){foreach($QtipeMeasure->result_array() as $rowmeasure){			$tipemeasure = $rowmeasure['storageperiod'];		}}				$QtipeView = $this->db->query('SELECT displayby FROM tblviews WHERE idview = "'.$idview.'" ');		if($QtipeView->num_rows() > 0){foreach($QtipeView->result_array() as $rowview){			$tipeview = $rowview['displayby'];		}}				switch ( $tipeview ) {			case 'month' : 						switch ( $tipemeasure ) {					case 'month' :						return $this->getdetailmeasurebyperiodname($idmeasure, $idview, $idperiodname, $yearname);					break;					case 'quarter' :						if ( $idperiodname == 'Jan' || $idperiodname == 'Feb' || $idperiodname == 'Mar' ) {							return $this->getdetailmeasurebyperiodname($idmeasure, $idview, 'Q1', $yearname);						} else if ( $idperiodname == 'Apr' || $idperiodname == 'Mei' || $idperiodname == 'Jun' ) {							return $this->getdetailmeasurebyperiodname($idmeasure, $idview, 'Q2', $yearname);						} else if ( $idperiodname == 'Jul' || $idperiodname == 'Aug' || $idperiodname == 'Sep' ) {							return $this->getdetailmeasurebyperiodname($idmeasure, $idview, 'Q3', $yearname);						} else if ( $idperiodname == 'Okt' || $idperiodname == 'Nop' || $idperiodname == 'Des' ) {							return $this->getdetailmeasurebyperiodname($idmeasure, $idview, 'Q4', $yearname);						}					break;					case 'week' :						if ( $idperiodname == 'Jan' || $idperiodname == 'Feb' || $idperiodname == 'Mar' ) {							return $this->getdetailmeasurebyperiodname($idmeasure, $idview, 'W13', $yearname);						} else if ( $idperiodname == 'Apr' || $idperiodname == 'Mei' || $idperiodname == 'Jun' ) {							return $this->getdetailmeasurebyperiodname($idmeasure, $idview, 'W26', $yearname);						} else if ( $idperiodname == 'Jul' || $idperiodname == 'Aug' || $idperiodname == 'Sep' ) {							return $this->getdetailmeasurebyperiodname($idmeasure, $idview, 'W39', $yearname);						} else if ( $idperiodname == 'Okt' || $idperiodname == 'Nop' || $idperiodname == 'Des' ) {							return $this->getdetailmeasurebyperiodname($idmeasure, $idview, 'W52', $yearname);						}					break;				}			break;			case 'quarter' : 				switch ( $tipemeasure ) {					case 'month' :						if ( $idperiodname == 'Q1' ) {							return $this->getdetailmeasurebyperiodname($idmeasure, $idview, 'Mar', $yearname);						} else if ( $idperiodname == 'Q2' ) {							return $this->getdetailmeasurebyperiodname($idmeasure, $idview, 'Jun', $yearname);						} else if ( $idperiodname == 'Q3' ) {							return $this->getdetailmeasurebyperiodname($idmeasure, $idview, 'Sep', $yearname);						} else if ( $idperiodname == 'Q4' ) {							return $this->getdetailmeasurebyperiodname($idmeasure, $idview, 'Des', $yearname);						}					break;					case 'quarter' :						return $this->getdetailmeasurebyperiodname($idmeasure, $idview, $idperiodname, $yearname);					break;					case 'week' :						if ( $idperiodname == 'Q1' ) {							return $this->getdetailmeasurebyperiodname($idmeasure, $idview, 'W13', $yearname);						} else if ( $idperiodname == 'Q2' ) {							return $this->getdetailmeasurebyperiodname($idmeasure, $idview, 'W26', $yearname);						} else if ( $idperiodname == 'Q3' ) {							return $this->getdetailmeasurebyperiodname($idmeasure, $idview, 'W39', $yearname);						} else if ( $idperiodname == 'Q4' ) {							return $this->getdetailmeasurebyperiodname($idmeasure, $idview, 'W52', $yearname);						}					break;				}			break;			case 'week' : 				switch ( $tipemeasure ) {					case 'month' :						if ( $idperiodname == 'W01' || $idperiodname == 'W02' || $idperiodname == 'W03' || $idperiodname == 'W04' ) {								return $this->getdetailmeasurebyperiodname($idmeasure, $idview, 'Jan', $yearname);						} else if ( $idperiodname == 'W05' || $idperiodname == 'W06' || $idperiodname == 'W07' || $idperiodname == 'W08' ) {								return $this->getdetailmeasurebyperiodname($idmeasure, $idview, 'Feb', $yearname);						} else if ( $idperiodname == 'W09' || $idperiodname == 'W10' || $idperiodname == 'W11' || $idperiodname == 'W12' || $idperiodname == 'W13' ) {								return $this->getdetailmeasurebyperiodname($idmeasure, $idview, 'Mar', $yearname);						} else if ( $idperiodname == 'W14' || $idperiodname == 'W15' || $idperiodname == 'W16' || $idperiodname == 'W17' ) {								return $this->getdetailmeasurebyperiodname($idmeasure, $idview, 'Apr', $yearname);						} else if ( $idperiodname == 'W18' || $idperiodname == 'W19' || $idperiodname == 'W20' || $idperiodname == 'W21' ) {								return $this->getdetailmeasurebyperiodname($idmeasure, $idview, 'Mei', $yearname);						} else if ( $idperiodname == 'W22' || $idperiodname == 'W23' || $idperiodname == 'W24' || $idperiodname == 'W25' || $idperiodname == 'W26' ) {								return $this->getdetailmeasurebyperiodname($idmeasure, $idview, 'Jun', $yearname);						} else if ( $idperiodname == 'W27' || $idperiodname == 'W28' || $idperiodname == 'W29' || $idperiodname == 'W30' ) {								return $this->getdetailmeasurebyperiodname($idmeasure, $idview, 'Jul', $yearname);						} else if ( $idperiodname == 'W31' || $idperiodname == 'W32' || $idperiodname == 'W33' || $idperiodname == 'W34' ) {								return $this->getdetailmeasurebyperiodname($idmeasure, $idview, 'Aug', $yearname);						} else if ( $idperiodname == 'W35' || $idperiodname == 'W36' || $idperiodname == 'W37' || $idperiodname == 'W38' || $idperiodname == 'W39' ) {								return $this->getdetailmeasurebyperiodname($idmeasure, $idview, 'Sep', $yearname);						} else if ( $idperiodname == 'W40' || $idperiodname == 'W41' || $idperiodname == 'W42' || $idperiodname == 'W43' ) {								return $this->getdetailmeasurebyperiodname($idmeasure, $idview, 'Okt', $yearname);						} else if ( $idperiodname == 'W44' || $idperiodname == 'W45' || $idperiodname == 'W46' || $idperiodname == 'W47' ) {								return $this->getdetailmeasurebyperiodname($idmeasure, $idview, 'Nop', $yearname);						} else if ( $idperiodname == 'W48' || $idperiodname == 'W49' || $idperiodname == 'W50' || $idperiodname == 'W51' || $idperiodname == 'W52' ) {								return $this->getdetailmeasurebyperiodname($idmeasure, $idview, 'Des', $yearname);						}					break;					case 'quarter' :						if ( $idperiodname == 'W01' || $idperiodname == 'W02' || $idperiodname == 'W03' || $idperiodname == 'W04' || $idperiodname == 'W05' || $idperiodname == 'W06' || $idperiodname == 'W07' || $idperiodname == 'W08' || $idperiodname == 'W09' || $idperiodname == 'W10' || $idperiodname == 'W11' || $idperiodname == 'W12' || $idperiodname == 'W13' ) {								return $this->getdetailmeasurebyperiodname($idmeasure, $idview, 'Q1', $yearname);						} else if ( $idperiodname == 'W14' || $idperiodname == 'W15' || $idperiodname == 'W16' || $idperiodname == 'W17' || $idperiodname == 'W18' || $idperiodname == 'W19' || $idperiodname == 'W20' || $idperiodname == 'W21' || $idperiodname == 'W22' || $idperiodname == 'W23' || $idperiodname == 'W24' || $idperiodname == 'W25' || $idperiodname == 'W26' ) {								return $this->getdetailmeasurebyperiodname($idmeasure, $idview, 'Q2', $yearname);						} else if ( $idperiodname == 'W27' || $idperiodname == 'W28' || $idperiodname == 'W29' || $idperiodname == 'W30' || $idperiodname == 'W31' || $idperiodname == 'W32' || $idperiodname == 'W33' || $idperiodname == 'W34' || $idperiodname == 'W35' || $idperiodname == 'W36' || $idperiodname == 'W37' || $idperiodname == 'W38' || $idperiodname == 'W39' ) {								return $this->getdetailmeasurebyperiodname($idmeasure, $idview, 'Q3', $yearname);						} else if ( $idperiodname == 'W40' || $idperiodname == 'W41' || $idperiodname == 'W42' || $idperiodname == 'W43' || $idperiodname == 'W44' || $idperiodname == 'W45' || $idperiodname == 'W46' || $idperiodname == 'W47' || $idperiodname == 'W48' || $idperiodname == 'W49' || $idperiodname == 'W50' || $idperiodname == 'W51' || $idperiodname == 'W52' ) {								return $this->getdetailmeasurebyperiodname($idmeasure, $idview, 'Q4', $yearname);						}					break;					case 'week' :						return $this->getdetailmeasurebyperiodname($idmeasure, $idview, $idperiodname, $yearname);					break;				}			break;		}			}		public function getdetailmeasurebyperiodname($idmeasure, $idview, $idperiodname, $yearname)	{		$data = array();		$data1 = array();		$data2 = array();		$data3 = array();				//$Q = mysql_query('SELECT target, owner FROM tbldetail WHERE id = "'.$idmeasure.'"');		$Q = mysql_query('SELECT tbldetail.`actual`, tbldetail.`target`, tbldetail.`index`, tbldetail.`weight`,tblusers.`name`, tblmeasure.`type`  FROM tbldetail INNER JOIN `tblmeasure` ON `tbldetail`.`idmeasure` = tblmeasure.`idmeasure` INNER JOIN tblusers ON tblmeasure.`defaultowner` = tblusers.`idusers` WHERE tbldetail.idmeasure = "'.$idmeasure.'" AND tbldetail.idview = "'.$idview.'"  AND tbldetail.periodname = "'.$idperiodname.'" AND tbldetail.year = "'.$yearname.'" ');				while($row = mysql_fetch_array($Q))		{			$data1 = $row;		}				$Q2 = mysql_query('SELECT tbllocation.`name` as location FROM tbllocation INNER JOIN tblmeasure ON tbllocation.`idlocation` = tblmeasure.`location` WHERE tblmeasure.`idmeasure` = "'.$idmeasure.'" limit 1');		while($row2 = mysql_fetch_array($Q2))		{			$data2 = $row2;		}				$Q3 = mysql_query('SELECT tblweight.`weight` as weight FROM tblweight WHERE tblweight.`idmeasure` = "'.$idmeasure.'" limit 1');		while($row3 = mysql_fetch_array($Q3))		{			$data3 = $row3;		}				$data = array_merge($data1, $data2, $data3);				return $data;	}		public function getHirarkiKPIbyLocation($parent)	{		$datarec = array();				$Q = mysql_query('SELECT * FROM tblhirarkikpibylocation WHERE parent = "'.$parent.'"');		while($line=mysql_fetch_assoc($Q))		{			$Q1 = mysql_query('SELECT COUNT(id) as NUMX FROM tblhirarkikpibylocation WHERE parent = "'.$line['id'].'"');			$row1 = mysql_fetch_assoc($Q1);			if($row1['NUMX'] > 0)			{				$data = array(					'id'=>$line['id'],					'name'=>$line['name'],					'parent'=>$line['parent'],					'data'=>$this->getdetailhirarki($line['id']),					'children'=>$this->getHirarkiKPIbyLocation($line['id'])				);			}			else if($row1['NUMX'] < 1)			{				$data = array(					'id'=>$line['id'],					'name'=>$line['name'],					'parent'=>$line['parent'],					'data'=>$this->getdetailhirarki($line['id'])				);			}			$datarec[] = $data;		}        return $datarec;	}		public function getHirarkiKPIbyOwner($parent)	{		$datarec = array();				$Q = mysql_query('SELECT * FROM tblhirarkikpibyowner WHERE parent = "'.$parent.'"');		while($line=mysql_fetch_assoc($Q))		{			$Q1 = mysql_query('SELECT COUNT(id) as NUMX FROM tblhirarkikpibyowner WHERE parent = "'.$line['id'].'"');			$row1 = mysql_fetch_assoc($Q1);			if($row1['NUMX'] > 0)			{				$data = array(					'id'=>$line['id'],					'name'=>$line['name'],					'parent'=>$line['parent'],					'data'=>$this->getdetailhirarki($line['id']),					'children'=>$this->getHirarkiKPIbyOwner($line['id'])				);			}			else if($row1['NUMX'] < 1)			{				$data = array(					'id'=>$line['id'],					'name'=>$line['name'],					'parent'=>$line['parent'],					'data'=>$this->getdetailhirarki($line['id'])				);			}			$datarec[] = $data;		}        return $datarec;	}		public function makeRecursive($d, $r = 0, $pk = 'parent', $k = 'id', $c = 'children') 	{		$m = array();		foreach ($d as $e) 		{			isset($m[$e[$pk]]) ?: $m[$e[$pk]] = array();			isset($m[$e[$k]]) ?: $m[$e[$k]] = array();			$m[$e[$pk]][] = array_merge($e, array($c => &$m[$e[$k]]));		}		return $m[$r][0]; // remove [0] if there could be more than one root nodes	}		public function getinfomonthactive($idview)	{		$data = array();		$this->db->where('iddb', $_SESSION['dbuserlogged']);        $Q = $this->db->get('tblperiod');        if($Q->num_rows() > 0){foreach($Q->result_array() as $row){$data[] = $row;}}        return $data;		/* get information current active period		$Qactiveperiod = $this->db->query('SELECT * FROM tblperiod');		if($Qactiveperiod->num_rows() > 0){foreach($Qactiveperiod->result_array() as $rowactiveperiod){			$monthactive = $rowactiveperiod['month'];			$yearactive = $rowactiveperiod['year'];		}}		if ($monthactive=='Jan') { $months = "'jan'"; }		else if ($monthactive=='Feb') { $months = "'jan','feb'"; }		else if ($monthactive=='Mar') { $months = "'jan','feb','mar'"; }		else if ($monthactive=='Apr') { $months = "'jan','feb','mar','apr'"; }		else if ($monthactive=='May') { $months = "'jan','feb','mar','apr','mei'"; }		else if ($monthactive=='Jun') { $months = "'jan','feb','mar','apr','mei','jun'"; }		else if ($monthactive=='Jul') { $months = "'jan','feb','mar','apr','mei','jun','jul'"; }		else if ($monthactive=='Aug') { $months = "'jan','feb','mar','apr','mei','jun','jul','aug'"; }		else if ($monthactive=='Sep') { $months = "'jan','feb','mar','apr','mei','jun','jul','aug','sep'"; }		else if ($monthactive=='Oct') { $months = "'jan','feb','mar','apr','mei','jun','jul','aug','sep','okt'"; }		else if ($monthactive=='Nov') { $months = "'jan','feb','mar','apr','mei','jun','jul','aug','sep','okt','nop'"; }		else if ($monthactive=='Dec') { $months = "'jan','feb','mar','apr','mei','jun','jul','aug','sep','okt','nop','des'"; }		$Q=$this->db->query('SELECT * FROM tblperiod WHERE `month` IN("'.$months.'") AND idview = "'.$idview.'"');		//echo ('SELECT * FROM tblperiod WHERE `month` IN('.$months.'	) AND idview = "'.$idview.'"');exit();		if($Q->num_rows() > 0){foreach($Q->result_array() as $row){$data[] = $row;}}        return $data;         */	}	public function getinfoview($idview)	{		$data = array();		$this->db->select('idview, title, name, displayby');		$this->db->where('idview', $idview);         $Q = $this->db->get('tblviews');        if($Q->num_rows() > 0){foreach($Q->result_array() as $row){$data[] = $row;}}        return $data;	}		public function getinfomeasure($idmeasure)	{		$data = array();		$Q = $this->db->query('SELECT storageperiod, type FROM tblmeasure WHERE idmeasure = "'.$idmeasure.'" limit 1');        if($Q->num_rows() > 0){foreach($Q->result_array() as $row){$data[]= $row;}}        return $data;	}		public function getinfomeasureall()	{		$data = array();		$Q = $this->db->query('SELECT  idmeasure , storageperiod, type FROM tblmeasure WHERE type="group" OR type="formula" ');        if($Q->num_rows() > 0){foreach($Q->result_array() as $row){$data[]= $row;}}        return $data;	}		public function gettbldetail($idview, $idmeasure, $periodname)	{		$Qa = $this->db->query('UPDATE tbldetail SET actual = NULL WHERE actual = 0');		$Qt = $this->db->query('UPDATE tbldetail SET target = NULL WHERE target = 0');		$Qs1 = $this->db->query('UPDATE tbldetail SET series1 = NULL WHERE series1 = 0');		$Qs2 = $this->db->query('UPDATE tbldetail SET series2 = NULL WHERE series2 = 0');		$Qsv1 = $this->db->query('UPDATE tbldetail SET series1variance = NULL WHERE series1variance = 0');		$Qsv2 = $this->db->query('UPDATE tbldetail SET series2variance = NULL WHERE series2variance = 0');		$Qtv = $this->db->query('UPDATE tbldetail SET targetvariance = NULL WHERE targetvariance  = 0');				$data = array();		$Q = $this->db->query('SELECT * FROM tbldetail WHERE idview= "'.$idview.'" AND idmeasure = "'.$idmeasure.'" AND periodname ="'.$periodname.'" limit 1');		//$Q = $this->db->query('SELECT actual, target FROM tbldetail WHERE idview= "'.$idview.'" AND idmeasure = "'.$idmeasure.'" ');        if($Q->num_rows() > 0){foreach($Q->result_array() as $row){$data[]= $row;}}        return $data;	}		public function getseries( $iddb , $idmeasure , $seriestype)	{		$data = array();		$Q = $this->db->query('SELECT * FROM tbldataseries WHERE iddb= "'.$iddb.'" AND idmeasure = "'.$idmeasure.'" AND seriestype = "'.$seriestype.'" ');	//	print('SELECT * FROM tbldataseries WHERE iddb= "'.$iddb.'" AND idmeasure = "'.$idmeasure.'" AND seriestype = "'.$seriestype.'" ');exit;        if($Q->num_rows() > 0){foreach($Q->result_array() as $row){$data[]= $row;}}        return $data;	}	public function gettblranges($iddb)	{		$data = array();		$Q = $this->db->query('SELECT * FROM tblperformanceranges WHERE iddb= "'.$iddb.'" ');        if($Q->num_rows() > 0){foreach($Q->result_array() as $row){$data[]= $row;}}        return $data;	}		public function getactcomm($iddb, $idmeasure)	{		$data = array();		$Q = $this->db->query('SELECT * FROM tblactcomm WHERE iddb = "'.$iddb.'" AND idmeasure = "'.$idmeasure.'" LIMIT 1 ');        if($Q->num_rows() > 0){foreach($Q->result_array() as $row){$data[]= $row;}}        return $data;	}		public function getdatachartxy($idview, $idmeasure)	{		$data = array();		$Q = $this->db->query('SELECT * FROM `tbldetail` WHERE idview = "'.$idview.'" AND  idmeasure="'.$idmeasure.'"');        if($Q->num_rows() > 0){foreach($Q->result_array() as $row){$data[]= $row;}}        return $data;	}		}